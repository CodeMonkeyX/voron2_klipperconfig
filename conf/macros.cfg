#####################################################################
#	Macros
#####################################################################

[gcode_macro flow_rate_test]
gcode:
  {% set FLOW_SPEED = params.SPEED|default(100)|float %}
  
  SAVE_GCODE_STATE NAME=flow_rate_test

  M83     ;relative extrusions 
  G1 F450 ;450mm/min speed 
  G1 E20  ;prime with 20mm 
  G1 F3   ;slow extrude for pause 
  G1 E0.1 ;0.1mm extrusion 
  G1 F{SPEED} ;450mm/min speed 
  G1 E250 ;250mm extrusion x2 to 
  G1 E250 ;trick max extrusion limit

  RESTORE_GCODE_STATE NAME=flow_rate_test

# Conditional G28 (home if not already homed)
[gcode_macro CG28]
gcode:
  {% if "x" not in printer.toolhead.homed_axes or "y" not in printer.toolhead.homed_axes or "z" not in printer.toolhead.homed_axes %}
  G28
  {% endif %}

[gcode_macro G32]
gcode:
  BED_MESH_CLEAR
  CG28
  QUAD_GANTRY_LEVEL
  CLEAN_NOZZLE
  # Rehome Z after cleaning to get a better reading with no debris on the nozzle.
  G28 Z
  ## 350mm build
  #G0 X175 Y175 Z30 F3600

[gcode_macro PRINT_START]
gcode:
  {% set BED_TEMP = params.BED_TEMP|default(60)|float %}
  {% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(190)|float %}
  {% set CHAMBER_TEMP = params.CHAMBER_TEMP|default(50)|float %}

  SAVE_GCODE_STATE NAME=start

  M117 Warming up...
  BED_MESH_CLEAR

  # Turn lights on.
  LIGHTS_ON
  
  # Use absolute coordinates
  G90

  # Reset the G-Code Z offset (adjust Z offset if needed)
  #SET_GCODE_OFFSET Z=-0.04

  # Trun on underbed fan.
  SET_FAN_SPEED FAN=underbed_fan SPEED=0.50
  
  # Set chamber temp.
  M141 S{CHAMBER_TEMP}

  # Wait for bed to reach temperature
  M190 S{BED_TEMP}
  
  M117 Heating for Soak
  TEMPERATURE_WAIT SENSOR="temperature_sensor chamber" MINIMUM={CHAMBER_TEMP - 10}   ; wait for chamber temp
  #TEMPERATURE_WAIT SENSOR="temperature_sensor chamber" MINIMUM=40   ; wait for chamber temp
  M117 Soak Complete

  # Wait 10 minutes.
  #M117 Heat Soak
  #G4 P600000

  # Set and wait for nozzle to reach temperature
  M109 S{EXTRUDER_TEMP}
  G1 E-1.0 F3600  

  # Home and QGL
  G32

  #BED_MESH_CALIBRATE METHOD=automatic
  
  # Set and wait for nozzle to reach temperature
  PRIME_NOZZLE T_NOZZLE={EXTRUDER_TEMP}

  M117 Printing

  RESTORE_GCODE_STATE NAME=start

##  Clear display output after Duration in seconds  
##  Use: UPDATE_DELAYED_GCODE ID=_CLEAR_DISPLAY DURATION=1
[delayed_gcode _CLEAR_DISPLAY]
gcode:
  M117

[delayed_gcode PRINT_END_DELAY]
gcode:
  # Disable exhaust fan.
  M141 S70
  LIGHTS_OFF
  # Trun on underbed fan.
  SET_FAN_SPEED FAN=underbed_fan SPEED=0.0
    M117

[gcode_macro PRINT_END]
gcode:
  M400                           ; wait for buffer to clear
  G92 E0                         ; zero the extruder
  G1 E-10.0 F3600                ; retract filament
  G91                            ; relative positioning
  TURN_OFF_HEATERS
  M107                           ; turn off fan
  G1 Z20 F3000                   ; move nozzle up 20mm
  G90                            ; absolute positioning
  G0  X350 Y300 F3600            ; park nozzle at rear
  BED_MESH_CLEAR
  M84

  M117 Cooling

  # Keep the exhaust fan running for 5 minutes.
  M141 S30

  UPDATE_DELAYED_GCODE ID=PRINT_END_DELAY DURATION=1200

[gcode_macro PRIME_NOZZLE]
#description: print a priming line along the front of the bed
gcode:
	{% if not params.T_NOZZLE %}
	{ action_raise_error("nozzle temperature not specified") }
	{% endif %}
	{% set nozzle_temp = params.T_NOZZLE|int %}

	SAVE_GCODE_STATE NAME=prime_nozzle
	M117 Priming nozzle
	G90
	{% if printer.toolhead.position.z < 5 %}
	G0 Z5 F10000
	{% endif %}
	G0 X5 Y5 F10000 # XXXXXX: CHANGE THESE VALUES TO SOMETHING SAFE FOR YOUR PRINTER
	G0 Z1 F1000
	M109 S{nozzle_temp}
	G0 Z0.15 F1000
	G91
	G1 X60 E9 F1000
	G1 X100 E12.5 F1000
	G0 Z2 F1000
	M117
	RESTORE_GCODE_STATE NAME=prime_nozzle

[gcode_macro CANCEL_PRINT]
description: Cancel the actual running print
rename_existing: CANCEL_PRINT_BASE
gcode:
  TURN_OFF_HEATERS
  CANCEL_PRINT_BASE
  G91
  G1 Z20.00 F4000
  G90
  G1 X350 F4000
  G1 Y300 F4000

  M107                           ; turn off fan
  BED_MESH_CLEAR
  M84
  M117 Cooling
  # Keep the exhaust fan running for 5 minutes.
  M141 S30

  UPDATE_DELAYED_GCODE ID=PRINT_END_DELAY DURATION=600

[gcode_macro M600]
gcode:
  PAUSE

[gcode_macro PAUSE]
description: Pause the actual running print
rename_existing: PAUSE_BASE
# change this if you need more or less extrusion
variable_extrude: 1.0
gcode:
  ##### read E from pause macro #####
  {% set E = printer["gcode_macro PAUSE"].extrude|float %}
  ##### set park positon for x and y #####
  # default is your max posion from your printer.cfg
  {% set x_park = printer.toolhead.axis_maximum.x|float - 5.0 %}
  {% set y_park = printer.toolhead.axis_maximum.y|float - 5.0 %}
  ##### calculate save lift position #####
  {% set max_z = printer.toolhead.axis_maximum.z|float %}
  {% set act_z = printer.toolhead.position.z|float %}
  {% if act_z < (max_z - 2.0) %}
      {% set z_safe = 2.0 %}
  {% else %}
      {% set z_safe = max_z - act_z %}
  {% endif %}
  ##### end of definitions #####
  PAUSE_BASE
  G91
  {% if printer.extruder.can_extrude|lower == 'true' %}
    G1 E-{E} F2100
  {% else %}
    {action_respond_info("Extruder not hot enough")}
  {% endif %}
  {% if "xyz" in printer.toolhead.homed_axes %}
    G1 Z{z_safe} F900
    G90
    G1 X{x_park} Y{y_park} F6000
  {% else %}
    {action_respond_info("Printer not homed")}
  {% endif %} 
    
[gcode_macro RESUME]
description: Resume the actual running print
rename_existing: RESUME_BASE
gcode:
  ##### read E from pause macro #####
  {% set E = printer["gcode_macro PAUSE"].extrude|float %}
  #### get VELOCITY parameter if specified ####
  {% if 'VELOCITY' in params|upper %}
    {% set get_params = ('VELOCITY=' + params.VELOCITY)  %}
  {%else %}
    {% set get_params = "" %}
  {% endif %}
  ##### end of definitions #####
  {% if printer.extruder.can_extrude|lower == 'true' %}
    G91
    G1 E{E} F2100
  {% else %}
    {action_respond_info("Extruder not hot enough")}
  {% endif %}  
  RESUME_BASE {get_params}

# Convert Marlin linear advance (M900) commands to Klipper (SET_PRESSURE_ADVANCE) commands.
# For use with Marlin's linear advance calibration: https://marlinfw.org/tools/lin_advance/k-factor.html
[gcode_macro M900]
gcode:
	# Parameters
	{% set pa = params.K|float %}
	SET_PRESSURE_ADVANCE ADVANCE={pa}